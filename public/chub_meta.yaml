# All of these fields are optional, as is this file itself,
#   in which case these values can be managed in the UI.

# The name of the stage.
# project_name: "Stage Template"

# A short tagline to show in search.
# tagline: "A base template for all stages."

# 'PUBLIC', 'PRIVATE', or 'UNLISTED'.
# visibility: 'PUBLIC'

# 'ADJACENT' | 'NONE' | 'COVER' | 'FULLSCREEN'
# 'ADJACENT' is default. The frame will display on the side of the
#   chat on desktop and above/in the top half of the chat on mobile.
# 'NONE' will not display, only run.
# 'COVER' will, indeed, cover the chat history completely,
#   but leave the text input box.
# 'FULLSCREEN' will make nothing below the header bar
#   show except for your stage.
# position: 'ADJACENT'

# Self-explanatory.
# tags:
#  - 'Stage'
#  - 'Admin'
#  - 'Template'
#  - 'Base'

# The schema of any user-supplied config.
# If your stage requires a configuration but has no
#   defined schema, it won't work.
config_schema:
  type: "object"
  properties:
    maxActive:
      type: "integer"
      default: 5
      minimum: 2
      maximum: 15
      description: "Maximum number of characters that can be active in a scene"
    activityChance:
      type: "integer"
      default: 50
      minimum: 10
      maximum: 100
      description: "Base probability (%) for additional characters to join a scene"
  required: ["maxActive", "activityChance"]
  additionalProperties: false

# The schema of the state that you store.
# This isn't needed even if you do store state,
#   and is here more for future use cases to
#   optimize storage.
state_schema:
  type: "object"
  properties:
    responseHistory:
      type: "array"
      description: "History of character responses and interactions"
      items:
        type: "object"
        properties:
          responders:
            type: "array"
            items:
              type: "string"
          messageContent:
            type: "string"
          timestamp:
            type: "number"
        required: ["responders", "timestamp"]
    characterStatus:
      type: "object"
      description: "Current status of each character"
      additionalProperties:
        type: "object"
        properties:
          state:
            type: "string"
            enum: ["active", "away", "busy"]
        required: ["state"]
  required: ["responseHistory", "characterStatus"]

# Whether to publish as 'Anonymous' instead of under your username.
# is_anonymous: false

# Self-explanatory.
# ratings_disabled: false

# This is here for future cases where ex. you need user secrets,
#    but currently does nothing.
# permissions:

# extension_id is automatically generated on push with a new project;
#    you should not make or set this value.
# github_path will be added if it does not exist. It is the URL of the repo.

name: Dynamic Group Chat Stage
type: stage
version: 1.0.0
description: A dynamic group conversation stage where characters interact naturally in a living world, with configurable participation rules and character states.

# Configuration schema
config_schema:
  type: "object"
  properties:
    maxActive:
      type: "integer"
      default: 5
      minimum: 2
      maximum: 15
      description: "Maximum number of characters that can be active in a scene"
    activityChance:
      type: "integer"
      default: 50
      minimum: 10
      maximum: 100
      description: "Base probability (%) for additional characters to join a scene"
  required: ["maxActive", "activityChance"]
  additionalProperties: false

# State schema for storing chat state
state_schema:
  type: "object"
  properties:
    responseHistory:
      type: "array"
      description: "History of character responses and interactions"
      items:
        type: "object"
        properties:
          responders:
            type: "array"
            items:
              type: "string"
          messageContent:
            type: "string"
          timestamp:
            type: "number"
        required: ["responders", "timestamp"]
    characterStatus:
      type: "object"
      description: "Current status of each character"
      additionalProperties:
        type: "object"
        properties:
          state:
            type: "string"
            enum: ["active", "away", "busy"]
        required: ["state"]
  required: ["responseHistory", "characterStatus"]

# Stage position and visibility
position: "NONE"  # Stage doesn't need UI, it just modifies the prompts
visibility: "PUBLIC"

# Repository information
github_path: 'https://github.com/Bersy123e/group_chat_master'
extension_id: 'group-chat-master-d3fdf75a9edd'

